///
 /// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 ///

namespace SDK.Models.Companies;
using SDK.Utils;
using SDK.Models.Shared;
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;
using System.Net;
using System.Net.Http;
using System.Text;

public class ListJobsRequest
{
    [JsonProperty("id")]
    public string Id { get; set; }
    
    [JsonProperty("offset")]
    public string? Offset { get; set; }
    
    [JsonProperty("per_page")]
    public string? PerPage { get; set; }
    
    internal static HttpRequestMessage BuildHttpRequestMessage(string operationId, ListJobsRequest value)
    {
        if("list_jobs" == operationId)
        {
            // serialize query parameters
            var queryParams = new List<string>();
            queryParams.Add(QueryParamSerializer.Serialize("simple",false, "id", "", value.Id));
            queryParams.Add(QueryParamSerializer.Serialize("form",true, "offset", "", value.Offset));
            queryParams.Add(QueryParamSerializer.Serialize("form",true, "per_page", "", value.PerPage));

            var queryParamString = $"?{String.Join("&", queryParams)}";
            // add path params
            
            var id = PathParamSerializer.Serialize("simple", false, value.Id);
            
            
            var message = new HttpRequestMessage(HttpMethod.Get, $"/companies/{id}/jobs" + queryParamString);
            return message;
        }
        throw new ArgumentException($"Attempt to build HttpRequestMessage for invalid operationId [{operationId}] for request type [ListJobsRequest]");
    }
}
