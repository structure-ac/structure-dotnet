///
 /// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 ///

namespace SDK.People;
using System.Net.Http;
using System.Text;
using Newtonsoft.Json;
using SDK.Models.Shared;
using SDK.Models.People;
using SDK.Utils;

public interface IPeopleSDK
{
    Task<EnrichPersonResponse> EnrichAsync(EnrichPersonRequest request);
    Task<SearchPeopleResponse> SearchAsync(SearchPeopleApplicationJSON request);
}

public class PeopleSDK: IPeopleSDK
{

    private const string language = "csharp";
    private const string sdkVersion = "0.0.1";
    private const string sdkGenVersion = "internal";
    public Uri ServerUrl { get { return _defaultClient.BaseAddress; } }
    private HttpClient _defaultClient;
    private HttpClient _securityClient;

    public PeopleSDK(HttpClient defaultClient, HttpClient securityClient)
    {
        _defaultClient = defaultClient;
        _securityClient = securityClient;
    }

    
    public async Task<EnrichPersonResponse> EnrichAsync(EnrichPersonRequest request)
    {
        string baseUrl = "";
        var message = EnrichPersonRequest.BuildHttpRequestMessage("enrich_person", request);
        var httpResponseMessage = await _defaultClient.SendAsync(message);
        var response = new EnrichPersonResponse
        {
            StatusCode = (int)httpResponseMessage.StatusCode,
            ContentType = httpResponseMessage.Content.Headers.ContentType?.MediaType,
            RawResponse = httpResponseMessage
        };
        if((response.StatusCode == 200))
        {
            if(Utilities.IsContentTypeMatch("*/*",response.ContentType))
            {
                // */*
                throw new NotImplementedException();
            }
            return response;
        }
        if((response.StatusCode == 401) || (response.StatusCode == 403) || (response.StatusCode == 404) || (response.StatusCode == 422))
        {
            return response;
        }
        return response;
    }

    
    public async Task<SearchPeopleResponse> SearchAsync(SearchPeopleApplicationJSON request)
    {
        string baseUrl = "";
        var message = SearchPeopleApplicationJSON.BuildHttpRequestMessage("search_people", request);
        var httpResponseMessage = await _defaultClient.SendAsync(message);
        var response = new SearchPeopleResponse
        {
            StatusCode = (int)httpResponseMessage.StatusCode,
            ContentType = httpResponseMessage.Content.Headers.ContentType?.MediaType,
            RawResponse = httpResponseMessage
        };
        if((response.StatusCode == 200))
        {
            if(Utilities.IsContentTypeMatch("*/*",response.ContentType))
            {
                // */*
                throw new NotImplementedException();
            }
            return response;
        }
        if((response.StatusCode == 401) || (response.StatusCode == 403))
        {
            return response;
        }
        return response;
    }

    
}